{"version":3,"sources":["components/Input/Input.tsx","components/Form/Form.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Input","label","name","value","stepValue","minValue","maxValue","onChange","className","type","step","min","max","Form","itemWidth","frameSize","animationDuration","length","String","Carousel","images","position","onNext","onPrev","style","width","translate","transitionDuration","map","img","i","src","alt","disabled","onClick","App","state","handleMoveForvard","moveValue","setState","prevState","Math","abs","handleMoveBack","handleChange","event","target","corectedPosition","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c6b4bb2.chunk.js","sourcesContent":["import React from 'react';\n\ntype HandleFunction = React.ChangeEventHandler<HTMLInputElement>;\n\ninterface Props {\n  label: string;\n  name: string\n  value: string;\n  stepValue: string;\n  minValue: string;\n  maxValue: string;\n  onChange: HandleFunction;\n}\n\nexport const Input: React.FC<Props> = ({\n  label,\n  name,\n  value,\n  stepValue,\n  minValue,\n  maxValue,\n  onChange,\n}) => {\n  return (\n    <div className=\"field\">\n      <label className=\"label\">{label}</label>\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"number\"\n          name={name}\n          step={stepValue}\n          min={minValue}\n          max={maxValue}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n// import { Checkbox } from '../Checkbox/Checkbox';\nimport { Input } from '../Input/Input';\nimport './Form.scss';\n\ntype HandleFunction = React.ChangeEventHandler<HTMLInputElement>;\n\ninterface Props {\n  itemWidth: string;\n  frameSize: string;\n  step: string;\n  animationDuration: string;\n  // infinite: boolean;\n  length: number,\n  onChange: HandleFunction;\n  // onChecked: HandleFunction;\n}\n\nexport const Form: React.FC<Props> = ({\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  // infinite,\n  length,\n  onChange,\n  // onChecked,\n}) => {\n  return (\n    <form className=\"Form box\">\n      <Input\n        label=\"Item Width\"\n        name=\"itemWidth\"\n        value={itemWidth}\n        stepValue=\"10\"\n        minValue=\"80\"\n        maxValue=\"180\"\n        onChange={onChange}\n      />\n\n      <Input\n        label=\"Frame Size\"\n        name=\"frameSize\"\n        value={frameSize}\n        stepValue=\"1\"\n        minValue=\"1\"\n        maxValue={String(length)}\n        onChange={onChange}\n      />\n\n      <Input\n        label=\"Step\"\n        name=\"step\"\n        value={step}\n        stepValue=\"1\"\n        minValue=\"1\"\n        maxValue=\"5\"\n        onChange={onChange}\n      />\n\n      <Input\n        label=\"Animation Duration\"\n        name=\"animationDuration\"\n        value={animationDuration}\n        stepValue=\"100\"\n        minValue=\"100\"\n        maxValue=\"3000\"\n        onChange={onChange}\n      />\n\n      {/* <Checkbox\n        label=\"Infinite\"\n        value={infinite}\n        onChecked={onChecked}\n      /> */}\n    </form>\n  );\n};\n","import React from 'react';\nimport './Carousel.scss';\n\ntype Image = string;\ntype HandleFunction = React.MouseEventHandler<HTMLButtonElement>;\n\ninterface Props {\n  images: Image[]\n  itemWidth: string;\n  frameSize: string;\n  // step: string;\n  animationDuration: string;\n  // infinite: boolean;\n  position: string;\n  onNext: HandleFunction;\n  onPrev: HandleFunction;\n}\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  // step,\n  animationDuration,\n  // infinite,\n  position,\n  onNext,\n  onPrev,\n}) => {\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__list-wrapper\"\n        style={{ width: +itemWidth * +frameSize }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: +itemWidth * images.length,\n            translate: `${position}px`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map(((img, i) => (\n            <li className=\"Carousel__item\" key={img}>\n              <img\n                src={img}\n                alt={String(i + 1)}\n                style={{ width: `${itemWidth}px` }}\n              />\n            </li>\n          )))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"button is-primary mr-5 is-rounded\"\n          disabled={position === '0'}\n          onClick={onPrev}\n        >\n          Prev\n        </button>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          className=\"button is-primary is-rounded\"\n          disabled={\n            position === String(-(+itemWidth * (images.length - +frameSize)))\n          }\n          onClick={onNext}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport { Form } from './components/Form/Form';\nimport { Carousel } from './components/Carousel/Carousel';\n\ntype Image = string;\n\ninterface State {\n  images: Image[]\n  itemWidth: string;\n  frameSize: string;\n  step: string;\n  animationDuration: string;\n  // infinite: boolean;\n  position: string;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: '130',\n    frameSize: '3',\n    step: '3',\n    animationDuration: '1000',\n    // infinite: false,\n    position: '0',\n  };\n\n  handleMoveForvard = () => {\n    const {\n      itemWidth, step, frameSize, images,\n    } = this.state;\n    const moveValue = +itemWidth * +step;\n    const maxValue = +itemWidth * (images.length - +frameSize);\n\n    this.setState(prevState => ({\n      position: Math.abs(+prevState.position - moveValue) > Math.abs(maxValue)\n        ? String(-maxValue)\n        : String(+prevState.position - moveValue),\n    }));\n  };\n\n  handleMoveBack = () => {\n    const moveValue = +this.state.itemWidth * +this.state.step;\n\n    this.setState(prevState => ({\n      position: (+prevState.position + moveValue) > 0\n        ? '0'\n        : String(+prevState.position + moveValue),\n    }));\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    const { itemWidth } = this.state;\n\n    this.setState(prevState => {\n      let corectedPosition;\n\n      switch (name) {\n        case 'itemWidth':\n          corectedPosition\n            = String(+prevState.position * (+value / +prevState.itemWidth));\n          break;\n\n        case 'frameSize':\n          corectedPosition\n            = prevState.position === '0'\n              ? prevState.position\n              : String(+prevState.position + +itemWidth);\n          break;\n\n        default:\n          corectedPosition = prevState.position;\n          break;\n      }\n\n      return ({\n        [name]: value,\n        position: name === 'itemWidth' || name === 'frameSize'\n          ? corectedPosition\n          : prevState.position,\n      }) as never;\n    });\n  };\n\n  // handleChecked = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { checked } = event.target;\n\n  //   this.setState({ infinite: checked });\n  // };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      // infinite,\n      position,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\" className=\"title mt-5 has-text-info has-text-centered\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Form\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          // infinite={infinite}\n          length={images.length}\n          onChange={this.handleChange}\n          // onChecked={this.handleChecked}\n        />\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          // step={step}\n          animationDuration={animationDuration}\n          // infinite={infinite}\n          position={position}\n          onNext={this.handleMoveForvard}\n          onPrev={this.handleMoveBack}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}